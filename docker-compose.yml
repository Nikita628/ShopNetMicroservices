# Please refer https://aka.ms/HTTPSinContainer on how to setup an https developer certificate for your ASP .NET Core service.

version: '3.4'

services:
  portainer: # container management tool
    image: portainer/portainer-ce
    container_name: portainer
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  pgadmin: # postgres DB management tool
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@aspnetrun.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    restart: always
    ports:
        - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin

  rabbitmq: # message broker
    image: rabbitmq:3-management-alpine
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"

# catalog ---------------------------
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  catalogapi:
    image: catalogapi
    build:
      context: .
      dockerfile: src/Services/Catalog/Dockerfile
    container_name: catalogapi
    ports:
      - 5000:80
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - catalogdb

# basket ------------------------------
  basketdb:
    image: redis:alpine
    container_name: basketdb
    restart: always
    ports:
      - "6379:6379"

  basketapi:
    image: ${DOCKER_REGISTRY-}basketapi
    build:
      context: .
      dockerfile: src/Services/Basket/Dockerfile
    container_name: basketapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "CacheSettings:ConnectionString=basketdb:6379"
      - "GrpcSettings:DiscountUri=http://discountgrpc"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - basketdb
      - rabbitmq
    ports:
      - "5001:80"

# discount --------------------------------
  discountdb:
    image: postgres
    container_name: discountdb
    environment:
      - POSTGRES_DB=discountdb
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  discountapi:
    image: ${DOCKER_REGISTRY-}discountapi
    build:
      context: .
      dockerfile: src/Services/Discount/Discount.Api/Dockerfile
    container_name: discountapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=discountdb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "5002:80"

  discountgrpc:
    image: ${DOCKER_REGISTRY-}discountgrpc
    build:
      context: .
      dockerfile: src/Services/Discount/Discount.Grpc/Dockerfile
    container_name: discountgrpc
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "DatabaseSettings:ConnectionString=Server=discountdb;Port=5432;Database=discountdb;User Id=admin;Password=admin1234;"
    depends_on:
      - discountdb
    ports:
      - "5003:80"

# order -----------------------------------------
  orderdb:
    image: mcr.microsoft.com/mssql/server:2017-latest
    container_name: orderdb
    environment:
      SA_PASSWORD: "Admin12345678"
      ACCEPT_EULA: "Y"
    restart: always
    ports:
      - "1433:1433"

  orderapi:
    image: ${DOCKER_REGISTRY-}orderapi
    build:
      context: .
      dockerfile: src/Services/Order/Dockerfile
    container_name: orderapi
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - "ConnectionStrings:OrderConnectionString=Server=orderdb;Database=OrderDb;User Id=sa;Password=Admin12345678"
      - "EventBusSettings:HostAddress=amqp://guest:guest@rabbitmq:5672"
    depends_on:
      - orderdb
      - rabbitmq
    ports:
      - "5004:80"

# ocelot --------------------------------------------------
  ocelotapigw:
    image: ${DOCKER_REGISTRY-}ocelotapigw
    build:
      context: .
      dockerfile: src/ApiGateways/Ocelot.ApiGateway/Dockerfile
    container_name: ocelotapigw
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - catalogapi
      - basketapi
      - discountapi
      - orderapi
    ports:
      - "5005:80"
# volumes ---------------------------
volumes:
  mongo_data:
  portainer_data:
  postgres_data:
  pgadmin_data: